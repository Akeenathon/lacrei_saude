name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Instalar dependências
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          pip install -r requirements.txt

      - name: Rodar Lint
        run: flake8 .

  test:
    name: Testes
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Instalar dependências
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Rodar Testes
        run: python manage.py test

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Instalar dependências
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build do Projeto
        run: |
          echo "Build concluído com sucesso!"
          # Adicione comandos de build específicos se necessário

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Configurar AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 # Altere para sua região

      # Exemplo de deploy para Elastic Beanstalk
      - name: Deploy para AWS Elastic Beanstalk
        run: |
          zip -r app.zip . -x '*.git*' '*.github*' 'venv*' '__pycache__*'
          aws elasticbeanstalk create-application-version \
            --application-name "SEU_APP_NAME" \
            --version-label "v-${{ github.run_number }}" \
            --source-bundle S3Bucket="SEU_BUCKET",S3Key="app-v${{ github.run_number }}.zip"
          aws elasticbeanstalk update-environment \
            --environment-name "SEU_ENV_NAME" \
            --version-label "v-${{ github.run_number }}"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1 # Altere para sua região

# IMPORTANTE:
# - Configure os segredos AWS_ACCESS_KEY_ID e AWS_SECRET_ACCESS_KEY no GitHub.
# - Substitua SEU_APP_NAME, SEU_ENV_NAME e SEU_BUCKET pelos nomes corretos do seu ambiente AWS.
# - Se usar outro serviço AWS (ECS, EC2, Lambda), me avise para adaptar o deploy. 